IntroductaryFight be in levels 0 and 1
introductaryFight display the relevant buttons
keep grouped_keys of introductaryFight
separate the levels into selectable collections
random start to each collection
visual indication for registering an action
one hand mod
local storage string should be a const
volume stored locally
range of levels limit only the available levels

Progress:
  Timestamp/mistake
  compute progress in presses instead of abstract points
  set minimum

Animation: 
  transition
  menu
  characters in fight
  victory 

Visuals:
  Transparent letter behind each letter to prevent the audio visualizer from hiding them.
  Level selector:
    selected row by gets a grid/area
    fill grid it with selected buttons + reverse button
    update buttons

Timer:
  Don't store
  Shared logic

Audio: 
  New:
    sound for each action
    sound for escalation
    sound for victory
  Schedule
  Song:
    stored as a stack of pairs of tracks
    played as a stuck of tracks from the stored stack
    transition:
      temporary response to a stack change
      can be a track or a effect
    a track can be accelerated to a shared maximum as a response to good play

Goal:
 Level selector
 Dynamic ost
 persistent memory (progress)

Updates:
  cross platform
  endless levels 
  histogram

Sequel:
  Migrate to Wisp

Quality Assurance:
  Optimization
  code optimizer
  
Far future:
  Image: 
    With arrays
    Transparent pixels for non square images
    Pixels pushing each other
    Shot pixels from multiple directions
    Deconstruct to rebuild in reverse
    Support different sizes

game mod: Memory challenge, remember the hidden buttons
Visuals that express the correct io
Color and background picker with payed customization.

Nvim: make "undo" an exception to the auto-save
